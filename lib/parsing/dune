;**************************************************************************
;*                                                                        *
;*                                 OCaml                                  *
;*                                                                        *
;*                     Thomas Refis, Jane Street Europe                   *
;*                                                                        *
;*   Copyright 2018 Jane Street Group LLC                                 *
;*                                                                        *
;*   All rights reserved.  This file is distributed under the terms of    *
;*   the GNU Lesser General Public License version 2.1, with the          *
;*   special exception on linking described in the file LICENSE.          *
;*                                                                        *
;**************************************************************************

(env
 ; (dev     (flags (:standard -w +a-4-9-40-41-42-44-45-48-67)))

 ; ignore warnings
 (dev (flags (:standard -warn-error -A))
  (js_of_ocaml
    (flags (:standard --enable=effects))
    (build_runtime_flags (:standard --enable=effects))))
 (release (flags (:standard -w +a-4-9-40-41-42-44-45-48-67))
  (js_of_ocaml
   (flags (:standard --enable=effects))
   (build_runtime_flags (:standard --enable=effects)))))

(rule
 (targets camlinternalMenhirLib.ml)
 (mode    fallback)
 (action  (copy# ../../boot/menhir/menhirLib.ml %{targets})))

(rule
 (targets camlinternalMenhirLib.mli)
 (mode    fallback)
 (action  (copy# ../../boot/menhir/menhirLib.mli %{targets})))

(rule
 (targets parser.ml)
 (mode    fallback)
 (deps    (:dep ../../boot/menhir/parser.ml))
 (action
   (with-stdout-to %{targets}
     (bash "cat %{dep} | sed 's/MenhirLib/CamlinternalMenhirLib/g'"))))

(rule
 (targets parser.mli)
 (mode    fallback)
 (deps    (:dep ../../boot/menhir/parser.mli))
 (action
   (with-stdout-to %{targets}
     (bash "cat %{dep} | sed 's/MenhirLib/CamlinternalMenhirLib/g'"))))

(ocamllex
 (modules lexer)
 (mode fallback))

(library
 (name ocamlfrontend)
 (public_name heifer.ocamlfrontend)
 (modules
 parser lexer Syntaxerr Pprintast Printast Asttypes Ast_helper Longident Parsetree Location Warnings Misc Terminfo Docstrings Build_path_prefix_map Clflags Profile Numbers Identifiable Arg_helper CamlinternalMenhirLib
 core_lang) ; the only module we own
 (libraries hipcore)
 (flags :standard -w -A))

(library
 (name racketfrontend)
 (public_name heifer.racketfrontend)
 (modules
 racket_parser racket_lexer)
 (libraries hipcore)
 (flags :standard -w -A))

(menhir
 (modules racket_parser))

(ocamllex racket_lexer)

(library
 (name hiplib)
 (public_name heifer)
 (modules hiplib tests)
 (libraries hipprover ocamlfrontend racketfrontend)
 (inline_tests)
 (preprocess (pps ppx_expect)))

(executable
 (name hip)
 (public_name heifer)
 (modules hip)
 (libraries unix hiplib provers_native))

(executable
 (name hipjs)
 (modules hipjs)
 (libraries brr hiplib provers_js)
 (modes js))

(install
 (section bin)
 (files (hip.exe as hip)))
